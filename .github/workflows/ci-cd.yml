name: CI-CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER:  ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d testdb"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

    - name: Build with Gradle
      run: ./gradlew build --scan

    - name: Build Docker image
      run: docker build -t blogue-dev:latest .

    - name: Save Docker image to a tar file
      run: docker save blogue-dev:latest -o blogue.tar

    - name: Copy Docker image to EC2
      uses: appleboy/scp-action@v0.1.0
      with:
        source: blogue.tar
        target: /home/ubuntu/blogue.tar
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: SSH to EC2 and load Docker image
      uses: appleboy/ssh-action@v0.1.2
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          docker load -i /home/ubuntu/blogue.tar
          docker stop blogue || true
          docker rm blogue || true
          docker run -d --name blogue -p 80:8080 blogue-dev:latest
